input SendMessageInput {
  senderId: ID!
  receiverId: ID!
  message: String!
}


type Message {
  id: ID!
  senderId: ID!
  receiverId: ID!
  message: String!
}


schema {
  query: Query
  mutation: Mutation
}

type Query {
  test_messages: Message[]
  messages: Message[]
}

type Mutation {
  sendMessage(input: SendMessageInput): Message
}


type Test {
  id: ID!
  senderId: ID!
  receiverId: ID!
  input: SendMessageInput
  message: Message!
}


//import MyQueryKeyOfType from "../../common/QueryKeyOfType";
//import base_query_type from "../../common/base.query.type";
//import { Query } from "./querys.and.mutations";

// class @QUERY_PROPERTY_NAME_type implements base_query_type {
//   type: Query["@QUERY_PROPERTY_NAME"];
//   name: MyQueryKeyOfType = "@QUERY_PROPERTY_NAME";
// }

// const @QUERY_PROPERTY_NAME = new @QUERY_PROPERTY_NAME_type();

// export default @QUERY_PROPERTY_NAME;


